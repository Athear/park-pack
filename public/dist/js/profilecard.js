var addpack=async a=>{console.log(a.srcElement.dataset.user),a.preventDefault();const b=a.srcElement.dataset.user;if(console.log(b),b){const a=await fetch("/api/dogs/profilecard",{method:"POST",body:JSON.stringify({friend_id:b}),headers:{"Content-Type":"application/json"}});a.ok?sweetAlert.fire({title:"This Doggo has been added to your pack!!",showConfirmButton:!0,icon:"success"}):sweetAlert.fire({title:"This Doggo is already in  your pack!!",icon:"warning",showConfirmButton:!0})}},viewProfile=async a=>{var b=a.target.value;if(console.log(a),b){const a=await fetch("api/dogs/"+b);a.ok?(console.log(a),document.location.replace("/individualprofile/"+b)):(sweetAlert.fire({title:"Cannot see doggo's profile",text:a.statusText,icon:"warning"}),console.log("oops, theres a bug!"))}};document.querySelectorAll(".addpack").forEach(function(a){a.addEventListener("click",addpack)}),document.querySelectorAll(".viewprofile").forEach(function(a){a.addEventListener("click",viewProfile)});const header=document.querySelector(".header"),spot=document.querySelector(".spot"),handleScroll=a=>{const b=a[0].isIntersecting;b?header.classList.remove("fixed-top"):header.classList.add("fixed-top")},options={root:null,rootMargin:"0px",threshhod:0},observer=new IntersectionObserver(handleScroll,options);observer.observe(spot);